--------------------------------------------------------------------------------
-- 1. MASTER DATA
--------------------------------------------------------------------------------

-- ROLES
CREATE TABLE ROLES (
    ROLE_ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ROLE_NAME       VARCHAR2(100) NOT NULL,
    DESCRIPTION     VARCHAR2(255)
);

-- USERS
CREATE TABLE USERS (
    USER_ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USERNAME        VARCHAR2(50) NOT NULL UNIQUE,
    PASSWORD_HASH   VARCHAR2(255) NOT NULL,
    FULL_NAME       VARCHAR2(100) NOT NULL,
    EMAIL           VARCHAR2(100),
    PHONE           VARCHAR2(20),
    ROLE_ID         NUMBER NOT NULL,
    STATUS          VARCHAR2(20) DEFAULT 'ACTIVE',
    CREATED_AT      DATE DEFAULT SYSDATE,
    UPDATED_AT      DATE,
    CONSTRAINT FK_USER_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ROLE_ID)
);

-- CUSTOMERS
CREATE TABLE CUSTOMERS (
    CUSTOMER_ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CUSTOMER_CODE   VARCHAR2(50) NOT NULL UNIQUE,
    NAME            VARCHAR2(200) NOT NULL,
    ADDRESS         VARCHAR2(300),
    PHONE           VARCHAR2(20),
    EMAIL           VARCHAR2(100),
    TAX_CODE        VARCHAR2(50),
    CONTACT_PERSON  VARCHAR2(100),
    TYPE            VARCHAR2(20),
    CREATED_AT      DATE DEFAULT SYSDATE
);

-- SUPPLIERS
CREATE TABLE SUPPLIERS (
    SUPPLIER_ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SUPPLIER_CODE   VARCHAR2(50) NOT NULL UNIQUE,
    NAME            VARCHAR2(200) NOT NULL,
    ADDRESS         VARCHAR2(300),
    PHONE           VARCHAR2(20),
    EMAIL           VARCHAR2(100),
    TAX_CODE        VARCHAR2(50),
    CONTACT_PERSON  VARCHAR2(100),
    RATING          NUMBER,
    CREATED_AT      DATE DEFAULT SYSDATE
);

-- PRODUCTS
CREATE TABLE PRODUCTS (
    PRODUCT_ID      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PRODUCT_CODE    VARCHAR2(50) NOT NULL UNIQUE,
    NAME            VARCHAR2(200) NOT NULL,
    UNIT            VARCHAR2(30) NOT NULL,
    CATEGORY        VARCHAR2(100),
    MIN_STOCK       NUMBER DEFAULT 0,
    IS_ACTIVE       VARCHAR2(1) DEFAULT 'Y',
    CREATED_AT      DATE DEFAULT SYSDATE
);

-- WAREHOUSES
CREATE TABLE WAREHOUSES (
    WAREHOUSE_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CODE                VARCHAR2(50) NOT NULL UNIQUE,
    NAME                VARCHAR2(200) NOT NULL,
    ADDRESS             VARCHAR2(300),
    MANAGER_USER_ID     NUMBER,
    DESCRIPTION         VARCHAR2(255),
    IS_ACTIVE           VARCHAR2(1) DEFAULT 'Y',
    CONSTRAINT FK_WAREHOUSE_MANAGER FOREIGN KEY (MANAGER_USER_ID) REFERENCES USERS(USER_ID)
);

--------------------------------------------------------------------------------
-- 2. PURCHASING MODULE
--------------------------------------------------------------------------------

-- PURCHASE_ORDERS
CREATE TABLE PURCHASE_ORDERS (
    PURCHASE_ORDER_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PO_NUMBER           VARCHAR2(50) NOT NULL UNIQUE,
    SUPPLIER_ID         NUMBER NOT NULL,
    ORDER_DATE          DATE NOT NULL,
    EXPECTED_DATE       DATE,
    STATUS              VARCHAR2(20) NOT NULL,
    CREATED_BY          NUMBER NOT NULL,
    APPROVED_BY         NUMBER,
    TOTAL_AMOUNT        NUMBER(18,2),
    NOTE                VARCHAR2(500),
    CREATED_AT          DATE DEFAULT SYSDATE,
    UPDATED_AT          DATE,
    CONSTRAINT FK_PO_SUPPLIER FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID),
    CONSTRAINT FK_PO_CREATEDBY FOREIGN KEY (CREATED_BY) REFERENCES USERS(USER_ID),
    CONSTRAINT FK_PO_APPROVEDBY FOREIGN KEY (APPROVED_BY) REFERENCES USERS(USER_ID)
);

-- PURCHASE_ORDER_LINES
CREATE TABLE PURCHASE_ORDER_LINES (
    PO_LINE_ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PURCHASE_ORDER_ID   NUMBER NOT NULL,
    PRODUCT_ID          NUMBER NOT NULL,
    QUANTITY            NUMBER(18,2) NOT NULL,
    UNIT_PRICE          NUMBER(18,2) NOT NULL,
    AMOUNT              NUMBER(18,2) GENERATED ALWAYS AS (QUANTITY * UNIT_PRICE) VIRTUAL,
    WAREHOUSE_ID        NUMBER NOT NULL,
    DELIVERY_DATE       DATE,
    CONSTRAINT FK_POL_PO FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES PURCHASE_ORDERS(PURCHASE_ORDER_ID),
    CONSTRAINT FK_POL_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    CONSTRAINT FK_POL_WH FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES(WAREHOUSE_ID)
);

-- PURCHASE_INVOICES
CREATE TABLE PURCHASE_INVOICES (
    PURCHASE_INVOICE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PURCHASE_ORDER_ID   NUMBER NOT NULL,
    INVOICE_NUMBER      VARCHAR2(50) NOT NULL,
    INVOICE_DATE        DATE NOT NULL,
    AMOUNT              NUMBER(18,2) NOT NULL,
    STATUS              VARCHAR2(20) NOT NULL,
    ATTACHED_FILE       VARCHAR2(255),
    CONSTRAINT FK_PI_PO FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES PURCHASE_ORDERS(PURCHASE_ORDER_ID)
);

-- SUPPLIER_PAYMENTS
CREATE TABLE SUPPLIER_PAYMENTS (
    PAYMENT_ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PURCHASE_INVOICE_ID NUMBER NOT NULL,
    SUPPLIER_ID         NUMBER NOT NULL,
    PAYMENT_DATE        DATE NOT NULL,
    AMOUNT              NUMBER(18,2) NOT NULL,
    PAYMENT_METHOD      VARCHAR2(50),
    STATUS              VARCHAR2(20) NOT NULL,
    NOTE                VARCHAR2(255),
    CONSTRAINT FK_SUP_PAY_INV FOREIGN KEY (PURCHASE_INVOICE_ID) REFERENCES PURCHASE_INVOICES(PURCHASE_INVOICE_ID),
    CONSTRAINT FK_SUP_PAY_SUP FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID)
);

--------------------------------------------------------------------------------
-- 3. SALES MODULE
--------------------------------------------------------------------------------

-- SALES_ORDERS
CREATE TABLE SALES_ORDERS (
    SALES_ORDER_ID      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SO_NUMBER           VARCHAR2(50) NOT NULL UNIQUE,
    CUSTOMER_ID         NUMBER NOT NULL,
    ORDER_DATE          DATE NOT NULL,
    EXPECTED_DELIVERY   DATE,
    STATUS              VARCHAR2(20) NOT NULL,
    CREATED_BY          NUMBER NOT NULL,
    APPROVED_BY         NUMBER,
    TOTAL_AMOUNT        NUMBER(18,2),
    NOTE                VARCHAR2(500),
    CREATED_AT          DATE DEFAULT SYSDATE,
    UPDATED_AT          DATE,
    CONSTRAINT FK_SO_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    CONSTRAINT FK_SO_CREATEDBY FOREIGN KEY (CREATED_BY) REFERENCES USERS(USER_ID),
    CONSTRAINT FK_SO_APPROVEDBY FOREIGN KEY (APPROVED_BY) REFERENCES USERS(USER_ID)
);

-- SALES_ORDER_LINES
CREATE TABLE SALES_ORDER_LINES (
    SO_LINE_ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SALES_ORDER_ID      NUMBER NOT NULL,
    PRODUCT_ID          NUMBER NOT NULL,
    QUANTITY            NUMBER(18,2) NOT NULL,
    UNIT_PRICE          NUMBER(18,2) NOT NULL,
    AMOUNT              NUMBER(18,2) GENERATED ALWAYS AS (QUANTITY * UNIT_PRICE) VIRTUAL,
    WAREHOUSE_ID        NUMBER NOT NULL,
    DELIVERY_DATE       DATE,
    CONSTRAINT FK_SOL_SO FOREIGN KEY (SALES_ORDER_ID) REFERENCES SALES_ORDERS(SALES_ORDER_ID),
    CONSTRAINT FK_SOL_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    CONSTRAINT FK_SOL_WH FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES(WAREHOUSE_ID)
);

-- SALES_INVOICES
CREATE TABLE SALES_INVOICES (
    SALES_INVOICE_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SALES_ORDER_ID      NUMBER NOT NULL,
    INVOICE_NUMBER      VARCHAR2(50) NOT NULL,
    INVOICE_DATE        DATE NOT NULL,
    AMOUNT              NUMBER(18,2) NOT NULL,
    STATUS              VARCHAR2(20) NOT NULL,
    ATTACHED_FILE       VARCHAR2(255),
    CONSTRAINT FK_SI_SO FOREIGN KEY (SALES_ORDER_ID) REFERENCES SALES_ORDERS(SALES_ORDER_ID)
);

-- CUSTOMER_PAYMENTS
CREATE TABLE CUSTOMER_PAYMENTS (
    PAYMENT_ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SALES_INVOICE_ID    NUMBER NOT NULL,
    CUSTOMER_ID         NUMBER NOT NULL,
    PAYMENT_DATE        DATE NOT NULL,
    AMOUNT              NUMBER(18,2) NOT NULL,
    PAYMENT_METHOD      VARCHAR2(50),
    STATUS              VARCHAR2(20) NOT NULL,
    NOTE                VARCHAR2(255),
    CONSTRAINT FK_CUS_PAY_INV FOREIGN KEY (SALES_INVOICE_ID) REFERENCES SALES_INVOICES(SALES_INVOICE_ID),
    CONSTRAINT FK_CUS_PAY_CUS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

--------------------------------------------------------------------------------
-- 4. WAREHOUSE/INVENTORY MODULE
--------------------------------------------------------------------------------

-- INVENTORY_TRANSACTIONS
CREATE TABLE INVENTORY_TRANSACTIONS (
    INV_TX_ID           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TX_TYPE             VARCHAR2(10) NOT NULL,         -- IN, OUT, ADJUST
    TX_DATE             DATE NOT NULL,
    WAREHOUSE_ID        NUMBER NOT NULL,
    PRODUCT_ID          NUMBER NOT NULL,
    QUANTITY            NUMBER(18,2) NOT NULL,
    REF_TYPE            VARCHAR2(10),                  -- PO, SO, MANUAL
    REF_ID              NUMBER,
    NOTE                VARCHAR2(255),
    CREATED_BY          NUMBER NOT NULL,
    CONSTRAINT FK_INV_TRX_WH FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES(WAREHOUSE_ID),
    CONSTRAINT FK_INV_TRX_PRD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    CONSTRAINT FK_INV_TRX_USER FOREIGN KEY (CREATED_BY) REFERENCES USERS(USER_ID)
);

-- INVENTORY_BALANCES
CREATE TABLE INVENTORY_BALANCES (
    ID                  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    WAREHOUSE_ID        NUMBER NOT NULL,
    PRODUCT_ID          NUMBER NOT NULL,
    BALANCE_QTY         NUMBER(18,2) NOT NULL,
    LAST_UPDATE         DATE DEFAULT SYSDATE,
    CONSTRAINT FK_BAL_WH FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES(WAREHOUSE_ID),
    CONSTRAINT FK_BAL_PRD FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);

--------------------------------------------------------------------------------
-- 5. PERMISSIONS AND AUDITING
--------------------------------------------------------------------------------

-- ROLE_PERMISSIONS
CREATE TABLE ROLE_PERMISSIONS (
    ID                  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ROLE_ID             NUMBER NOT NULL,
    PERMISSION_CODE     VARCHAR2(50) NOT NULL,
    IS_ALLOWED          VARCHAR2(1) DEFAULT 'Y',
    CONSTRAINT FK_ROLE_PERM FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ROLE_ID)
);

-- AUDIT_LOGS
CREATE TABLE AUDIT_LOGS (
    ID                  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TABLE_NAME          VARCHAR2(50) NOT NULL,
    RECORD_ID           NUMBER,
    ACTION              VARCHAR2(20) NOT NULL,
    USER_ID             NUMBER NOT NULL,
    ACTION_TIME         DATE DEFAULT SYSDATE,
    DETAIL              VARCHAR2(1000),
    CONSTRAINT FK_AUDIT_USER FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);
